.game-container {
  width: 800px; 
  height: 600px; 
  position: relative; 
  overflow: hidden; 
  border: 2px solid black; /* Updated border */
  margin: 20px auto; /* Centered on page */
}

#player {
  position: absolute;
  width: 50px;
  height: 50px;
  background-image: url('../../assets/player.png'); /* Corrected path */
  background-size: cover; /* Cover is fine for player sprite */
  background-repeat: no-repeat;
  z-index: 10; /* Player above other layers */
  /* Initial position set by TypeScript, but good to have some defaults or verify */
  bottom: 100px; /* Example: default to sitting on 100px high earth */
  left: 50%;
  transform: translateX(-50%);
}

.background-image {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url('../../assets/background.png'); /* Corrected path */
  background-size: 100% 100%; /* Stretch to fill the div */
  background-repeat: no-repeat;
  z-index: 1; /* Background layer */
}

.earth-image {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100px; /* Fixed height for the earth strip */
  background-image: url('../../assets/earth.png'); /* Corrected path */
  background-size: 100% 100%; /* Stretch to fill the div */
  background-repeat: no-repeat;
  z-index: 5; /* Earth layer, above background, below player */
}

/* 
  Styling for individual scrolling elements for initial setup via TypeScript.
  No explicit styles needed here if JS handles left positions for #bg2, #earth2.
  e.g., #bg1, #earth1 will have left: 0px initially.
  #bg2, #earth2 will have left: 100% (or backgroundWidth) initially via TS.
*/
